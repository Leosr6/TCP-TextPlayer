/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package textplayer;
import java.util.List;
import java.util.NoSuchElementException;
import javax.swing.DefaultListModel;
/**
 *
 * @author GÃ¼nter Hertz
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    List<String> instruments;
    Player player;
    
    public MainFrame(List<String> instrumentlist) {
        instruments = instrumentlist;
        initComponents();
        player = new Player(bpmLabel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        playButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        addInstrumentButton = new java.awt.Button();
        addAllInstrumentsButton = new java.awt.Button();
        removeAllInstrumentsButton = new java.awt.Button();
        removeInstrumentButton = new java.awt.Button();
        textAreaLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        availableInstruments = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        usedInstruments = new javax.swing.JList<>();
        availableInstrumentsLabel = new javax.swing.JLabel();
        usedInstrumentsLabel = new javax.swing.JLabel();
        bpmTitleLabel = new javax.swing.JLabel();
        bpmLabel = new javax.swing.JLabel();
        increaseBPM = new java.awt.Button();
        lowerBPM = new java.awt.Button();
        menuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        LoadFileMenu = new javax.swing.JMenuItem();
        SaveTxtMenu = new javax.swing.JMenuItem();
        SaveMidiMenu = new javax.swing.JMenuItem();
        HelpMenu = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TextPlayer");
        setResizable(false);
        setSize(new java.awt.Dimension(748, 600));

        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);
        textArea.setLineWrap(true);

        textArea.setWrapStyleWord(true);

        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/textplayer/playicon.png"))); // NOI18N
        playButton.setPreferredSize(new java.awt.Dimension(120, 30));
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/textplayer/stopicon.png"))); // NOI18N
        stopButton.setPreferredSize(new java.awt.Dimension(120, 30));
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        addInstrumentButton.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        addInstrumentButton.setLabel(">");
        addInstrumentButton.setPreferredSize(new java.awt.Dimension(100, 30));
        addInstrumentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInstrumentButtonActionPerformed(evt);
            }
        });

        addAllInstrumentsButton.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        addAllInstrumentsButton.setLabel(">>");
        addAllInstrumentsButton.setPreferredSize(new java.awt.Dimension(100, 30));
        addAllInstrumentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAllInstrumentsButtonActionPerformed(evt);
            }
        });

        removeAllInstrumentsButton.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        removeAllInstrumentsButton.setLabel("<<");
        removeAllInstrumentsButton.setPreferredSize(new java.awt.Dimension(100, 30));
        removeAllInstrumentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAllInstrumentsButtonActionPerformed(evt);
            }
        });

        removeInstrumentButton.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        removeInstrumentButton.setLabel("<");
        removeInstrumentButton.setPreferredSize(new java.awt.Dimension(100, 30));
        removeInstrumentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeInstrumentButtonActionPerformed(evt);
            }
        });

        textAreaLabel.setText("Text to be played:");

        availableInstruments.setPreferredSize(new java.awt.Dimension(40, 80));
        jScrollPane2.setViewportView(availableInstruments);
        DefaultListModel availableModel = new DefaultListModel();
        for (String s : instruments)
        availableModel.addElement(s);
        availableInstruments.setModel(availableModel);

        jScrollPane3.setViewportView(usedInstruments);
        DefaultListModel usedModel = new DefaultListModel();
        usedInstruments.setModel(usedModel);

        availableInstrumentsLabel.setText("Available Instruments");

        usedInstrumentsLabel.setText("Used Instruments");

        bpmTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpmTitleLabel.setText("BPM");

        bpmLabel.setBackground(new java.awt.Color(255, 255, 255));
        bpmLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpmLabel.setText("150");

        increaseBPM.setActionCommand("+");
        increaseBPM.setLabel("+");
        increaseBPM.setName(""); // NOI18N
        increaseBPM.setPreferredSize(new java.awt.Dimension(35, 35));
        increaseBPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseBPMActionPerformed(evt);
            }
        });

        lowerBPM.setLabel("-");
        lowerBPM.setPreferredSize(new java.awt.Dimension(35, 35));
        lowerBPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowerBPMActionPerformed(evt);
            }
        });

        FileMenu.setText("File");

        LoadFileMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        LoadFileMenu.setText("Load File");
        LoadFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadFileMenuActionPerformed(evt);
            }
        });
        FileMenu.add(LoadFileMenu);

        SaveTxtMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        SaveTxtMenu.setText("Save File");
        SaveTxtMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveTxtMenuActionPerformed(evt);
            }
        });
        FileMenu.add(SaveTxtMenu);

        SaveMidiMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        SaveMidiMenu.setText("Save MIDI");
        FileMenu.add(SaveMidiMenu);

        menuBar.add(FileMenu);

        HelpMenu.setText("Help");

        jMenuItem4.setText("Read Me");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        HelpMenu.add(jMenuItem4);

        menuBar.add(HelpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textAreaLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(bpmTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                        .addComponent(bpmLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(increaseBPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lowerBPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(removeAllInstrumentsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(removeInstrumentButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addAllInstrumentsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addInstrumentButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(availableInstrumentsLabel))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usedInstrumentsLabel)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textAreaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addInstrumentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(addAllInstrumentsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(removeAllInstrumentsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(removeInstrumentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(availableInstrumentsLabel)
                            .addComponent(usedInstrumentsLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bpmTitleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bpmLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(increaseBPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lowerBPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void LoadFileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadFileMenuActionPerformed
        List<String> loadedText;
        loadedText = FileManager.loadFromFile();
        if (loadedText != null)
            displayText(loadedText);
    }//GEN-LAST:event_LoadFileMenuActionPerformed

    private void SaveTxtMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveTxtMenuActionPerformed
        String displayedText = textArea.getText();
        FileManager.saveToFile(displayedText);
    }//GEN-LAST:event_SaveTxtMenuActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        
        /* 
            TO DO: 
                - fazer tratamento da String song com os /n?
        */
        
        //"First time" playing => set and play song
        if (player.isPaused() == false && player.isPlaying() == false)     
        {
            textArea.setEditable(false);
            playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/textplayer/pauseicon.png")));
        
            DefaultListModel used = (DefaultListModel) usedInstruments.getModel();
            List<String> instruments = ListModelManipulation.toString(used);
        
            String song = textArea.getText();
        
            player.setInstruments(instruments);
            player.setSong(song);

            player.play();
        }
        
        //Player is paused => resume song
        else if (player.isPaused() == true)
        {
            playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/textplayer/pauseicon.png")));
            player.resume();
        }
        
        //Player is playing => pause song
        else if (player.isPlaying() == true) 
        {
            playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/textplayer/playicon.png")));
            player.pause();
        }
    }//GEN-LAST:event_playButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopButtonActionPerformed
        
        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/textplayer/playicon.png")));
        textArea.setEditable(true);
        player.stop();
           
    }//GEN-LAST:event_StopButtonActionPerformed

    private void addInstrumentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInstrumentButtonActionPerformed

        DefaultListModel available = (DefaultListModel) availableInstruments.getModel();
        DefaultListModel used = (DefaultListModel) usedInstruments.getModel();       

        String selectedInstrument = availableInstruments.getSelectedValue(); 
        List<DefaultListModel> updatedModels;
        updatedModels = ListModelManipulation.moveElement(available, used, selectedInstrument);
        
        availableInstruments.setModel(updatedModels.get(0));
        usedInstruments.setModel(updatedModels.get(1));
        
    }//GEN-LAST:event_addInstrumentButtonActionPerformed

    private void addAllInstrumentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAllInstrumentsButtonActionPerformed
        
        DefaultListModel available = (DefaultListModel) availableInstruments.getModel();
        DefaultListModel used = (DefaultListModel) usedInstruments.getModel();
        
        List<DefaultListModel> updatedModels;
        updatedModels = ListModelManipulation.moveAllElements(available, used);
        
        availableInstruments.setModel(updatedModels.get(0));
        usedInstruments.setModel(updatedModels.get(1));
        
    }//GEN-LAST:event_addAllInstrumentsButtonActionPerformed

    private void removeAllInstrumentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAllInstrumentsButtonActionPerformed
        
        DefaultListModel available = (DefaultListModel) availableInstruments.getModel();
        DefaultListModel used = (DefaultListModel) usedInstruments.getModel();
        
        List<DefaultListModel> updatedModels;
        updatedModels = ListModelManipulation.moveAllElements(used, available);
        
        availableInstruments.setModel(updatedModels.get(1));
        usedInstruments.setModel(updatedModels.get(0));
    }//GEN-LAST:event_removeAllInstrumentsButtonActionPerformed

    private void removeInstrumentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeInstrumentButtonActionPerformed
        DefaultListModel available = (DefaultListModel) availableInstruments.getModel();
        DefaultListModel used = (DefaultListModel) usedInstruments.getModel();
        
        String selectedInstrument = usedInstruments.getSelectedValue(); 
        List<DefaultListModel> updatedModels;
        updatedModels = ListModelManipulation.moveElement(used, available, selectedInstrument);
        
        availableInstruments.setModel(updatedModels.get(1));
        usedInstruments.setModel(updatedModels.get(0));
    }//GEN-LAST:event_removeInstrumentButtonActionPerformed

    private void increaseBPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseBPMActionPerformed
        if (player.isPlaying() == false)
            player.increaseBPM(5); 
        /*
            TO DO:
                alterar BPM pelo botÃ£o enquanto a mÃºsica Ã© tocada?
        */
    }//GEN-LAST:event_increaseBPMActionPerformed

    private void lowerBPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowerBPMActionPerformed
        if (player.isPlaying() == false)
            player.decreaseBPM(5);
        /*
            TO DO:
                alterar BPM pelo botÃ£o enquanto a mÃºsica Ã© tocada?
        */
    }//GEN-LAST:event_lowerBPMActionPerformed

    //Sets the text on jTextArea1
    private void displayText(List<String> text)
    {
        if (!text.isEmpty())
        {
            int i;
            textArea.setText(null); //clear the existing text
            for (i = 0; i < text.size()-1; i++)
            {
                textArea.append(text.get(i) + "\n");
            }
            textArea.append(text.get(i));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JMenuItem LoadFileMenu;
    private javax.swing.JMenuItem SaveMidiMenu;
    private javax.swing.JMenuItem SaveTxtMenu;
    private java.awt.Button addAllInstrumentsButton;
    private java.awt.Button addInstrumentButton;
    private javax.swing.JList<String> availableInstruments;
    private javax.swing.JLabel availableInstrumentsLabel;
    private javax.swing.JLabel bpmLabel;
    private javax.swing.JLabel bpmTitleLabel;
    private java.awt.Button increaseBPM;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private java.awt.Button lowerBPM;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton playButton;
    private java.awt.Button removeAllInstrumentsButton;
    private java.awt.Button removeInstrumentButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JTextArea textArea;
    private javax.swing.JLabel textAreaLabel;
    private javax.swing.JList<String> usedInstruments;
    private javax.swing.JLabel usedInstrumentsLabel;
    // End of variables declaration//GEN-END:variables
}
